# A generic, single database configuration.

[alembic]
# Localização dos scripts de migração
script_location = db/migrations

# Template usado para gerar arquivos de migração
# Formato: ano/mês/dia_hora/minuto/segundo_descrição
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(slug)s

# Timezone para renderizar a data dentro do arquivo de migração
# e também no nome do arquivo
timezone = UTC

# Tamanho máximo de caracteres para o campo "slug"
truncate_slug_length = 40

# Executa o ambiente durante o comando 'revision'
# independente do autogenerate
revision_environment = false

# Permite arquivos .pyc e .pyo sem um arquivo .py fonte
# para ser detectado como revisões no diretório versions/
sourceless = false

# Especificação da localização das versões
# Isso é definido para db/migrations/versions por padrão
version_locations = %(here)s/db/migrations/versions

# Encoding usado quando os arquivos de revisão
# são escritos a partir do script.py.mako
output_encoding = utf-8

# URL de conexão com o banco de dados
# Será sobrescrita pelo valor em config.py
sqlalchemy.url = sqlite:///db/logs.db

[post_write_hooks]
# Hooks que são executados após a geração de novos scripts de migração

# Configurações de Logging
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# Configurações específicas do SQLite
[sqlite]
# Habilita suporte a chaves estrangeiras
foreign_keys = ON

# Configurações de timeout para evitar bloqueios
timeout = 30

# Modo WAL (Write-Ahead Logging) para melhor performance
journal_mode = WAL

# Configurações de sincronização
synchronous = NORMAL 